import streamlit as st
import openai as ai

# Add sidebar stuff and on_submit button stuff.

# Config
MODEL = 'text-davinci-002'
ai.api_key = "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"

# Helper function to call GPT
def generate_response(MODEL, PROMPT, MAX_TOKENS=250, TEMP=0.99, TOP_P=0.5, N=1, FREQ_PEN=0.3, PRES_PEN = 0.9):
  response = ai.Completion.create(
          engine = MODEL,
          # engine="text-davinci-002", # OpenAI has made four text completion engines available, named davinci, ada, babbage and curie. We are using davinci, which is the most capable of the four.
          prompt=PROMPT, # The text file we use as input (step 3)
          max_tokens=MAX_TOKENS, # how many maximum characters the text will consists of.
          temperature=TEMP,
          # temperature=int(temperature), # a number between 0 and 1 that determines how many creative risks the engine takes when generating text.,
          top_p=TOP_P, # an alternative way to control the originality and creativity of the generated text.
          n=N, # number of predictions to generate
          frequency_penalty=FREQ_PEN, # a number between 0 and 1. The higher this value the model will make a bigger effort in not repeating itself.
          presence_penalty=PRES_PEN # a number between 0 and 1. The higher this value the model will make a bigger effort in talking about new topics.
      )
  return response['choices'][0]['text']

### TOP OF PAGE ###
st.title("Automatic Worksheet Generator üéà (Beta)")
st.markdown("## By Pedagogical üß†")
st.sidebar.markdown("# AI Worksheet Generator üéà")

### Content ### - Either User-generated or from OpenAI. Alternative is to get it from Wikipedia.
title = st.text_input('Title')

st.markdown("### Content")
content = st.text_input('Add the text you want your students to learn here')
st.markdown(" OR ")
content_prompt = st.text_input('Add a topic to autogenerate text')

st.markdown("### Worksheet Configuration")
q_type = st.radio('Questioning Type', ['Questions', 'Questions & Answers'])

if content and content_prompt:
  st.error('You need to choose between providing your own content or autogenerated content')
elif content or content_prompt:
  ### Worksheet Options ###

  with st.spinner(text='Generating your worksheet üß†'):

    st.markdown(f"# {title} ‚úç")

    if content:
      pass
    elif content_prompt:
      content_prompt = ('Write two paragraphs about ' + content_prompt)
      content = generate_response(MODEL, content_prompt)
    else:
      pass
    
    if q_type == 'Questions':
        q_prompt = (f'write questions about the following text: {content}')
    elif q_type == 'Questions & Answers':
        q_prompt = (f'write questions and answers about the following text: {content}')
    q_and_or_a = generate_response(MODEL, q_prompt)

    st.text(content)

    st.text(q_and_or_a)

    
